services:
  # PostgreSQL Database for testing
  postgres:
    image: postgres:15-alpine
    container_name: marketplace_test_db
    environment:
      POSTGRES_DB: marketplace
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    networks:
      - test_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    tmpfs:
      - /var/lib/postgresql/data

  # Redis for rate limiting
  redis:
    image: redis:7-alpine
    container_name: marketplace_test_redis
    ports:
      - "6380:6379"
    networks:
      - test_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3

  # Test runner
  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: marketplace_test_runner
    environment:
      # Test Database Configuration
      DATABASE_URL: postgresql+psycopg://postgres:postgres@postgres:5432/marketplace
      TEST_DATABASE_URL: postgresql+psycopg://postgres:postgres@postgres:5432/marketplace_test
      
      # Redis Configuration
      REDIS_URL: redis://redis:6379/0
      
      # JWT Configuration
      JWT_SECRET_KEY: test-secret-key-for-testing-only
      JWT_ALGORITHM: HS256
      JWT_ACCESS_TOKEN_EXPIRE_MINUTES: 30
      SECRET_KEY: test-secret-key-for-testing-only
      
      # Application Configuration
      HOST: 0.0.0.0
      PORT: 8000
      DEBUG: false
      
      # Testing Configuration
      TESTING: 1
      PAYMENT_FAILURE_RATE: 0.0
      
      # Logging Configuration
      LOG_LEVEL: WARNING
      
      # Rate Limiting (high limits for testing)
      LOGIN_RATE_LIMIT: 1000/hour
      BOOKING_RATE_LIMIT: 1000/hour
      BROWSING_RATE_LIMIT: 10000/hour
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - test_network
    volumes:
      - ./tests:/app/tests
      - ./run_all_tests.py:/app/run_all_tests.py
      - test_logs:/app/logs

volumes:
  test_logs:

networks:
  test_network:
    driver: bridge

